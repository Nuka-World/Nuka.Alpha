// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nuka.Sample.API.Data;

namespace Nuka.Sample.API.Migrations.Sample
{
    [DbContext(typeof(SampleDbContext))]
    [Migration("20210105095939_InitialSampleMigrations")]
    partial class InitialSampleMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Nuka.Sample.API.Data.Entities.SampleItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FID")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("FCREATETIME");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FCREATEUSER");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FDISCIPTION");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FNAME");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("FPRICE");

                    b.Property<int>("SampleTypeId")
                        .HasColumnType("int")
                        .HasColumnName("FTYPEID");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("FUPDATETIME");

                    b.Property<string>("UpdateFunction")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FUPDATEFUNC");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FUPDATEUSER");

                    b.HasKey("Id");

                    b.HasIndex("SampleTypeId");

                    b.ToTable("ITEMM");
                });

            modelBuilder.Entity("Nuka.Sample.API.Data.Entities.SampleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FID")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("FCREATETIME");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FCREATEUSER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FTYPE");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("FUPDATETIME");

                    b.Property<string>("UpdateFunction")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FUPDATEFUNC");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FUPDATEUSER");

                    b.HasKey("Id");

                    b.ToTable("TYPEM");
                });

            modelBuilder.Entity("Nuka.Sample.API.Data.Entities.SampleItem", b =>
                {
                    b.HasOne("Nuka.Sample.API.Data.Entities.SampleType", "SampleType")
                        .WithMany()
                        .HasForeignKey("SampleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SampleType");
                });
#pragma warning restore 612, 618
        }
    }
}
